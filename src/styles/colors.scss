$colors: (
  light: (
    font-light-strong: rgb(255,255,255),
    font-light: rgba(255,255,255,0.8),
    font-dark: #111,
    primary: #2b3d87,
    secondary: #ff5c46,
    background: #fff,
    section-border: rgba(43, 61, 135, 0.07),
    member-background: rgba(43, 61, 135, 0.07),
    member-backside-background: rgba(43, 61, 135, 0.14),
    member-border: rgba(43, 61, 135, 0.21),
    more-devs-background: rgba(43, 61, 135, 0.03),
  ),
  dark: (
    font-light-strong: rgb(255,255,255),
    font-light: rgba(255,255,255,0.8),
    font-dark: #111,
    primary: #2b3d87,
    secondary: #ff5c46,
    background: #fff,
    section-border: rgba(43, 61, 135, 0.07),
    member-background: rgba(43, 61, 135, 0.07),
    member-backside-background: rgba(43, 61, 135, 0.14),
    member-border: rgba(43, 61, 135, 0.21),
    more-devs-background: rgba(43, 61, 135, 0.03),
  ),
);
$hero-background:  #080A2E linear-gradient(rgba(255,255,255,0.1),rgba(0,0,0,0.1));
$color-placeholder: "here";

@function compose-color-variable($color-key) {
  @return "--color-#{$color-key}";
}

:root {
  @each $key, $value in map-get($colors, "light") {
    #{compose-color-variable($key)}: #{$value};
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    @each $key, $value in map-get($colors, "dark") {
      #{compose-color-variable($key)}: #{$value};
    }
  }
}

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if not $index {
    @return $string;
  }

  @return str-slice($string, 1, $index - 1) + $replace +
    str-replace(
      str-slice($string, $index + str-length($search)),
      $search,
      $replace
    );
}

@function color-get($palette, $color-key) {
  @return map-get(map-get($colors, $palette), $color-key);
}

@mixin color-assign($property, $color-key, $template: "") {
  $fallback: #{color-get("light", $color-key)};
  $var: var(#{compose-color-variable($color-key)});

  #{$property}: if(
    str-length($template) == 0,
    $fallback,
    #{str-replace($template, $color-placeholder, $fallback)}
  );
  #{$property}: if(
    str-length($template) == 0,
    $var,
    #{str-replace($template, $color-placeholder, $var)}
  );
}
